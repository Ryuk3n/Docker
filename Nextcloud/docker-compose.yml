# Create a .env file in the folder, adjust the variables below.

# MOUNT_POINT=/your-path/
# VPN_PROVIDER=changeme
# VPN_CONFIG=changeme
# VPN_USERNAME=changeme
# VPN_PASSWORD=changeme
# RPC_USERNAME=changeme
# RPC_PASSWORD=changeme
# LOCAL_NETWORK=192.168.0.0/24

# Command to run : docker-compose run

version: "2"

services:
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    ports:
      - "7878:7878"
    networks:
      - cloudnet
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022
    volumes:
      - ${MOUNT_POINT}/radarr/config:/config
      - ${MOUNT_POINT}/movies:/movies
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/downloads:/data
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    ports:
      - "8989:8989"
    networks:
      - cloudnet
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
      - UMASK_SET=022
    volumes:
      - ${MOUNT_POINT}/sonarr/config:/config
      - ${MOUNT_POINT}/tv:/tv
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/downloads:/data
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    restart: always
    ports:
      - "8686:8686"
    networks:
      - cloudnet
    environment:
      - PGID=1001
      - PUID=1002
      - TZ=Europe/Paris
      - UMASK_SET=022
    volumes:
      - ${MOUNT_POINT}/lidarr/config:/config
      - ${MOUNT_POINT}/music:/music
      - ${MOUNT_POINT}/downloads:/downloads
      - ${MOUNT_POINT}/downloads:/data
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    networks:
      - cloudnet
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - ${MOUNT_POINT}/jackett/config:/config
    ports:
      - "9117:9117"

    organizr:
      image: organizrtools/organizr-v2
      container_name: organizr
      restart: always
      ports:
        - "80:80"
      networks:
        - cloudnet
      environment:
        - PGID=1000
        - PUID=1000
      volumes:
        - ${MOUNT_POINT}/organizr/config:/config
    watchtower:
      image: v2tec/watchtower
      container_name: watchtower
      restart: always
      networks:
        - cloudnet
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    portainer:
      image: portainer/portainer
      container_name: portainer
      restart: always
      ports:
        - "9000:9000"
      networks:
        - cloudnet
      volumes:
        - ${MOUNT_POINT}/portainer/config:/config
        - /var/run/docker.sock:/var/run/docker.sock
    transmission:
      image: haugene/transmission-openvpn
      container_name: transmission-openvpn
      restart: always
      ports:
        - "9091:9091"
      networks:
        - cloudnet
      environment:
        - OPENVPN_PROVIDER=${VPN_PROVIDER}
        - OPENVPN_CONFIG=${VPN_CONFIG}
        - OPENVPN_USERNAME=${VPN_USERNAME}
        - OPENVPN_PASSWORD=${VPN_PASSWORD}
        - OPENVPN_OPTS="--inactive 3600 --ping 10 --ping-exit 60"
        - LOCAL_NETWORK=${LOCAL_NETWORK}
        - TRANSMISSION_BIND_ADDRESS_IPV6="fe80::"
        - TRANSMISSION_DOWNLOAD_DIR=/data/complete
        - TRANSMISSION_INCOMPLETE_DIR=/data/incomplete
        - TRANSMISSION_RATIO_LIMIT=0
        - TRANSMISSION_RATIO_LIMIT_ENABLED=true
        - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
        - TRANSMISSION_RPC_USERNAME=${RPC_USERNAME}
        - TRANSMISSION_RPC_PASSWORD=${RPC_PASSWORD}
        - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
        - TRANSMISSION_SPEED_LIMIT_UP=0
        - TRANSMISSION_WATCH_DIR_ENABLED=false
        - TRANSMISSION_WEB_UI=transmission-web-control
      volumes:
        - ${MOUNT_POINT}/downloads:/data
        - ${MOUNT_POINT}/transmission/config:/config
        - /etc/localtime:/etc/localtime:ro
      cap_add:
        - NET_ADMIN
networks:
  cloudnet:
    driver: bridge
